{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/Login.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventDeleted","eventUpdated","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDetaStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","prototype","PropTypes","bool","isRequired","func","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EACI,kBADJA,EAEK,mBAFLA,EAIO,qBAJPA,EAKI,iBALJA,EAOI,kBAPJA,EAQc,6BARdA,EASK,wBATLA,EAUK,wBAVLA,EAWI,uBAXJA,EAaU,qCAbVA,EAeE,eAfFA,EAkBG,gBCjBVC,EAAe,CACjBC,UAAU,G,QCSRD,EAAe,CACjBE,OAAQ,GACRC,YAAa,MCbXH,EAAe,CACjBI,WAAW,GCGFC,EAAcC,YAAgB,CACvCC,GDAqB,WAAqC,IAAnCC,EAAkC,uDAA1BR,EAAcS,EAAY,uCAEzD,OAASA,EAAOC,MACZ,KAAKX,EACD,OAAO,2BACAS,GADP,IAEIJ,WAAW,IAEnB,KAAKL,EACD,OAAO,2BACAS,GADP,IAEIJ,WAAW,IAEnB,QACI,OAAOI,ICbfG,SFU2B,WAAqC,IAAnCH,EAAkC,uDAA1BR,EAAcS,EAAY,uCAC/D,OAASA,EAAOC,MACZ,KAAKX,EACD,OAAO,2BACAS,GADP,IAEIL,YAAaM,EAAOG,UAE5B,KAAKb,EACD,OAAO,2BACAS,GADP,IAEIN,OAAO,GAAD,mBACCM,EAAMN,QADP,CAEFO,EAAOG,YAGnB,KAAKb,EACD,OAAO,2BACAS,GADP,IAEIL,YAAa,OAErB,KAAKJ,EACD,OAAO,2BACAS,GADP,IAEIN,OAAQM,EAAMN,OAAOW,KACjB,SAAAC,GAAC,OAAMA,EAAEC,KAAON,EAAOG,QAAQG,GAAON,EAAOG,QAAUE,OAGnE,KAAKf,EACD,OAAO,2BACAS,GADP,IAEIN,OAAQM,EAAMN,OAAOc,QACjB,SAAAF,GAAC,OAAMA,EAAEC,KAAOP,EAAML,YAAYY,MAEtCZ,YAAa,OAErB,KAAKJ,EACD,kCACOS,GADP,IAEIN,OAAO,YAAMO,EAAOG,WAE5B,KAAKb,EACD,OAAO,eACAC,GAEX,QACI,OAAOQ,IEtDfS,KHAuB,WAAqC,IAAnCT,EAAkC,uDAA1BR,EAAcS,EAAY,uCAC3D,OAASA,EAAOC,MACZ,KAAKX,EACD,OAAO,uCACAS,GACAC,EAAOG,SAFd,IAGIX,UAAU,IAElB,KAAKF,EACD,OAAO,2BACAS,GADP,IAEIP,UAAU,IAElB,KAAKF,EACD,MAAO,CACHE,UAAU,GAElB,QACI,OAAOO,MIvBbU,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAG9FC,EAAQC,YACjBlB,EACAa,EACIM,YAAiBC,O,yDCVnBC,EAAUC,qDAEVC,EAAgB,SAAEC,EAAUC,GAA2B,IAArBC,EAAoB,uDAAX,MAEvCC,EAAG,UAAON,EAAP,YAAoBG,GAE7B,MAAgB,QAAXE,EACME,MAAOD,GAEPC,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAWP,MAK5BQ,EAAgB,SAAET,EAAUC,GAA2B,IAArBC,EAAoB,uDAAX,MAEvCC,EAAG,UAAON,EAAP,YAAoBG,GACvBU,EAAQC,aAAaC,QAAS,UAAa,GAEjD,MAAgB,QAAXV,EACME,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,UAAWK,KAIZN,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,eAAgB,mBAChB,UAAWK,GAEfJ,KAAMC,KAAKC,UAAWP,M,iBCpCrBY,EAAgB,WAAoB,IAAlBxC,EAAiB,uDAAR,GAEpC,OAAOA,EAAOW,KACV,SAACC,GAAD,mBAAC,eACMA,GADP,IAEI6B,IAAKC,IAAQ9B,EAAE6B,KAAME,SACrBC,MAAOF,IAAQ9B,EAAEgC,OAAQD,eCoB/BE,EAAc,SAAEC,GAAF,MAAc,CAC9BtC,KAAMX,EACNa,QAASoC,IAQAC,EAAwB,iBAAO,CAAEvC,KAAMX,IAmB9CmD,EAAe,iBAAO,CAAExC,KAAMX,IAmB9BoD,EAAe,SAAEH,GAAF,MAAc,CAC/BtC,KAAMX,EACNa,QAASoC,IAgBPI,EAAc,SAAElD,GAAF,MAAe,CAC/BQ,KAAMX,EACNa,QAASV,IC/BPmD,EAAiB,iBAAO,CAAE3C,KAAMX,IAEhCuD,EAAQ,SAAEC,GAAF,MAAa,CACvB7C,KAAMX,EACNa,QAAS2C,IAGAC,EAAc,WACvB,OAAO,SAAEC,GACLjB,aAAakB,QACbD,EDwB0B,CAAE/C,KAAMX,ICvBlC0D,EAAUE,OAIZA,EAAS,iBAAO,CAAEjD,KAAMX,I,gBC7EjB6D,EAAU,WAA0B,IAAxB5D,EAAuB,uDAAR,GAAQ,EAEhB6D,mBAAS7D,GAFO,mBAErC8D,EAFqC,KAE7BC,EAF6B,KAItCC,EAAQ,WACVD,EAAW/D,IAITiE,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBH,EAAU,2BACHD,GADE,kBAEHI,EAAOC,KAAQD,EAAOE,UAKhC,MAAO,CAAEN,EAAQG,EAAmBD,I,gBCd3BK,GAAc,WAEvB,IAAMZ,EAAWa,cAFY,EAGuBV,EAAQ,CACxDW,OAAQ,gBACRC,UAAW,WALc,mBAGrBC,EAHqB,KAGJC,EAHI,OAQ6Bd,EAAQ,CAC9De,MAAO,QACPC,OAAQ,kBACRC,WAAY,SACZC,WAAY,WAZa,mBAQrBC,EARqB,KAQDC,EARC,KAerBT,EAAsBE,EAAtBF,OAAQC,EAAcC,EAAdD,UACRG,EAA0CI,EAA1CJ,MAAOC,EAAmCG,EAAnCH,OAAQC,EAA2BE,EAA3BF,WAAYC,EAAeC,EAAfD,WAiBnC,OACI,sBAAKG,UAAU,4BAAf,SACI,uBAAKA,UAAU,MAAf,UACI,uBAAKA,UAAU,wBAAf,UACI,0CACA,wBAAMC,SApBF,SAAEpE,GFnBA,IAAEqE,EAAOC,EEoB3BtE,EAAEuE,iBACF5B,GFrBoB0B,EEqBEZ,EFrBKa,EEqBGZ,EFpBlC,uCAAO,WAAOf,GAAP,iBAAA6B,EAAA,sEACgB1D,EAAe,OAAQ,CAAEuD,QAAOC,YAAY,QAD5D,cACGG,EADH,gBAEgBA,EAAKC,OAFrB,QAEGrD,EAFH,QAIOsD,IACNjD,aAAakD,QAAS,QAASvD,EAAKI,OACpCC,aAAakD,QAAS,mBAAmB,IAAIC,MAAOC,WAEpDnC,EAAUH,EAAM,CACZuC,IAAK1D,EAAK0D,IACV1B,KAAMhC,EAAKgC,SAGf2B,IAAKC,KAAM,QAAS5D,EAAK6D,IAAK,SAb/B,2CAAP,yDEsCgB,UACI,sBAAKf,UAAU,aAAf,SACI,wBACIvE,KAAK,OACLuE,UAAU,eACVgB,YAAY,SACZ9B,KAAK,SACLC,MAAQG,EACR2B,SAAWxB,MAGnB,sBAAKO,UAAU,aAAf,SACI,wBACIvE,KAAK,WACLuE,UAAU,eACVgB,YAAY,gBACZ9B,KAAK,YACLC,MAAQI,EACR0B,SAAWxB,MAGnB,sBAAKO,UAAU,aAAf,SACI,wBACIvE,KAAK,SACLuE,UAAU,YACVb,MAAM,kBAMtB,uBAAKa,UAAU,wBAAf,UACI,2CACA,wBAAMC,SAhDC,SAAEpE,GAGrB,GAFAA,EAAEuE,iBAEGR,IAAeC,EAChB,OAAOgB,IAAKC,KAAM,QAAS,mCAAoC,SFT9C,IAAEZ,EAAOC,EAAUjB,EEWxCV,GFXuB0B,EEWEP,EFXKQ,EEWGP,EFXOV,EEWKQ,EFVjD,uCAAO,WAAOlB,GAAP,iBAAA6B,EAAA,sEACgB1D,EAAe,WAAY,CAAEuD,QAAOC,WAAUjB,QAAQ,QADtE,cACGoB,EADH,gBAEgBA,EAAKC,OAFrB,QAEGrD,EAFH,QAIOsD,IACNjD,aAAakD,QAAS,QAASvD,EAAKI,OACpCC,aAAakD,QAAS,mBAAmB,IAAIC,MAAOC,WAEpDnC,EAAUH,EAAM,CACZuC,IAAK1D,EAAK0D,IACV1B,KAAMhC,EAAKgC,QAEf2B,IAAKC,KAAM,UAAW,iBAAkB,YAExCD,IAAKC,KAAM,QAAS5D,EAAK6D,IAAK,SAd/B,2CAAP,yDEoDgB,UACI,sBAAKf,UAAU,aAAf,SACI,wBACIvE,KAAK,OACLuE,UAAU,eACVgB,YAAY,SACZ9B,KAAK,QACLC,MAAQO,EACRuB,SAAWlB,MAGnB,sBAAKC,UAAU,aAAf,SACI,wBACIvE,KAAK,QACLuE,UAAU,eACVgB,YAAY,SACZ9B,KAAK,SACLC,MAAQQ,EACRsB,SAAWlB,MAGnB,sBAAKC,UAAU,aAAf,SACI,wBACIvE,KAAK,WACLuE,UAAU,eACVgB,YAAY,gBACZ9B,KAAK,aACLC,MAAQS,EACRqB,SAAWlB,MAInB,sBAAKC,UAAU,aAAf,SACI,wBACIvE,KAAK,WACLuE,UAAU,eACVgB,YAAY,0BACZ9B,KAAK,aACLC,MAAQU,EACRoB,SAAWlB,MAInB,sBAAKC,UAAU,aAAf,SACI,wBACIvE,KAAK,SACLuE,UAAU,YACVb,MAAM,+BCzHzB+B,GAAS,WAAO,IAEjBhC,EAASiC,aAAa,SAAA5F,GAAK,OAAIA,EAAMS,QAArCkD,KACFV,EAAWa,cAOjB,OACI,uBAAKW,UAAU,kCAAf,UACI,uBAAMA,UAAU,eAAhB,SACMd,IAGN,0BACIc,UAAU,yBACVoB,QAbS,WACjB5C,EAAUD,MAUN,UAIA,oBAAGyB,UAAU,wBACT,kD,SCzBHqB,I,YAAW,CACpBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACNhE,MAAO,SACPiE,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,QCXNC,GAAgB,SAAC,GAAe,IAAbpE,EAAY,EAAZA,MAEpBqE,EAAgBrE,EAAhBqE,MAAO9D,EAASP,EAATO,KAEf,OACI,iCACI,kCAAU8D,IACV,uCAAU9D,EAAKY,Y,wCCPdmD,GAAc,iBAAO,CAAE5G,KAAMX,ICQpCwH,GAAe,CACjBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAGjBC,KAAMC,cAAc,SAEpB,IAAMC,GAAMrF,MAASsF,QAAQ,GAAGC,QAAQ,GAAGC,IAAK,EAAG,SAC7CC,GAAWJ,GAAIK,QAAQF,IAAK,EAAG,SAC/BG,GAAY,CACdlB,MAAO,GACPmB,MAAO,GACP1F,MAAOmF,GAAIpF,SACXF,IAAK0F,GAASxF,UAGL4F,GAAgB,WAEzB,IAAMhF,EAAWa,cACTlE,EAAcgG,aAAa,SAAA5F,GAAK,OAAIA,EAAMD,MAA1CH,UACAD,EAAgBiG,aAAa,SAAA5F,GAAK,OAAIA,EAAMG,YAA5CR,YAJuB,EAKK0D,mBAAUoE,GAAIpF,UALnB,mBAKvB6F,EALuB,KAKZC,EALY,OAMC9E,mBAAUwE,GAASxF,UANpB,mBAMvB+F,EANuB,KAMdC,EANc,OAOOhF,oBAAU,GAPjB,mBAOvBiF,EAPuB,KAOXC,EAPW,OAQOlF,mBAAU0E,IARjB,mBAQvBS,EARuB,KAQXC,EARW,KAUvBT,EAA6BQ,EAA7BR,MAAOnB,EAAsB2B,EAAtB3B,MAAOvE,EAAekG,EAAflG,MAAOH,EAAQqG,EAARrG,IAE7BuG,qBAAW,WAEJD,EADC9I,GAGWoI,MAEhB,CAAEpI,EAAa8I,IAElB,IAAMhF,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzB+E,EAAc,2BACPD,GADM,kBAER9E,EAAOC,KAAOD,EAAOE,UAIxB+E,EAAa,WACf1F,EDxD2B,CAAE/C,KAAMX,ICyDnC0D,EAAUR,KACVgG,EAAeV,KA4CnB,OACI,gBAAC,KAAD,CACIa,OAAShJ,EAETiJ,eAAiBF,EACjBG,MAAQ/B,GACRgC,eAAiB,IACjBtE,UAAU,QACVuE,iBAAiB,cAPrB,UASI,8BAAOrJ,EAAe,gBAAkB,iBACxC,wBACA,wBACI8E,UAAU,YACVC,SAvCa,SAACpE,GACtBA,EAAEuE,iBAEF,IAAMoE,EAAc7G,IAAQE,GACtB4G,EAAY9G,IAAQD,GAE1B,GAAK8G,EAAYE,cAAeD,GAC5B5D,IAAKC,KAAM,QAAS,sDAAuD,aAD/E,CAKA,GAAKsB,EAAMuC,OAAOC,OAAS,EACvB,OAAOd,GAAe,GRlCF,IAAE/F,EQsCtBS,EADCtD,GRrCqB6C,EQsCMgG,ERrCpC,uCAAO,WAAOvF,GAAP,iBAAA6B,EAAA,+EAEoBhD,EAAc,UAAD,OAAaU,EAAMjC,IAAOiC,EAAO,OAFlE,cAEOuC,EAFP,gBAGoBA,EAAKC,OAHzB,QAGOrD,EAHP,QAKWsD,GACNhC,EAAUN,EAAcH,IAExB8C,IAAKC,KAAM,QAAS5D,EAAK6D,IAAK,SARnC,kDAYC8D,QAAQC,IAAR,MAZD,0DAAP,uDAtD4B,SAAE/G,GAC9B,8CAAO,WAAOS,EAAUuG,GAAjB,uBAAA1E,EAAA,+DACmB0E,IAAdnE,EADL,EACKA,IAAK1B,EADV,EACUA,KADV,kBAIoB7B,EAAe,SAAUU,EAAO,QAJpD,cAIOuC,EAJP,gBAKoBA,EAAKC,OALzB,QAKOrD,EALP,QAOWsD,KACNzC,EAAMjC,GAAKoB,EAAK8H,OAAOlJ,GACvBiC,EAAMO,KAAO,CACT2G,IAAKrE,EACL1B,KAAMA,IAIdV,EAAUV,EAAaC,IAfxB,kDAiBC8G,QAAQC,IAAR,MAjBD,0DAAP,wDQ4FiBI,CAAkBnB,IAG/BD,GAAe,GACfI,MAeI,UAKI,uBAAKlE,UAAU,aAAf,UACI,yDACA,eAAC,KAAD,CACIiB,SA7DU,SAACpF,GAC3B6H,EAAc7H,GACdmI,EAAc,2BACPD,GADM,IAETlG,MAAOhC,MA0DKsD,MAAQsE,EACRzD,UAAU,oBAIlB,uBAAKA,UAAU,aAAf,UACI,sDACA,eAAC,KAAD,CACIiB,SA9DQ,SAACpF,GACzB+H,EAAY/H,GACZmI,EAAc,2BACPD,GADM,IAETrG,IAAK7B,MA2DOsD,MAAQwE,EACRwB,QAAU1B,EACVzD,UAAU,oBAIlB,wBACA,uBAAKA,UAAU,aAAf,UACI,oDACA,wBACIvE,KAAK,OACLuE,UAAS,wBAAqB6D,GAAc,cAC5C7C,YAAY,uBACZ9B,KAAK,QACLkG,aAAa,MACbjG,MAAQiD,EACRnB,SAAWjC,IAEf,wBAAOlD,GAAG,YAAYkE,UAAU,uBAAhC,yCAGJ,uBAAKA,UAAU,aAAf,UACI,2BACIvE,KAAK,OACLuE,UAAU,eACVgB,YAAY,QACZqE,KAAK,IACLnG,KAAK,QACLC,MAAQoE,EACRtC,SAAWjC,IAEf,wBAAOlD,GAAG,YAAYkE,UAAU,uBAAhC,yCAGJ,0BACIvE,KAAK,SACLuE,UAAU,oCAFd,UAII,oBAAGA,UAAU,gBACb,uDC1KPsF,GAAY,WAErB,IAAM9G,EAAWa,cAKjB,OACI,yBACIW,UAAU,sBACVoB,QAPe,WACnB5C,EAAU6D,OAIV,SAII,oBAAGrC,UAAU,mBCZZuF,GAAiB,WAE1B,IAAM/G,EAAWa,cAMjB,OACI,0BACIW,UAAU,4BACVoB,QARa,WACjB5C,EVgCJ,uCAAO,WAAOA,EAAUuG,GAAjB,mBAAA1E,EAAA,6DACKvE,EAAOiJ,IAAWrJ,SAASR,YAA3BY,GADL,kBAGoBuB,EAAc,UAAD,OAAavB,GAAO,GAAI,UAHzD,cAGOwE,EAHP,gBAIoBA,EAAKC,OAJzB,QAIOrD,EAJP,QAMWsD,GACNhC,EAAUP,KAEV4C,IAAKC,KAAM,QAAS5D,EAAK6D,IAAK,SATnC,kDAaC8D,QAAQC,IAAR,MAbD,0DAAP,0DU3BI,UAII,oBAAG9E,UAAU,iBACb,uDCFZrC,IAAO6H,OAAQ,MAEf,IAAMC,GAAYC,aAAiB/H,KAatBgI,GAAiB,WAE1B,IAAMnH,EAAWa,cAFe,EAGA8B,aAAa,SAAA5F,GAAK,OAAIA,EAAMG,YAApDT,EAHwB,EAGxBA,OAAQC,EAHgB,EAGhBA,YACR0F,EAAQO,aAAa,SAAA5F,GAAK,OAAIA,EAAMS,QAApC4E,IAJwB,EAKAhC,mBAAUrB,aAAaC,QAAS,aAAgB,SALhD,mBAKzBoI,EALyB,KAKfC,EALe,KAOhC5B,qBAAU,WACNzF,EX0CJ,uCAAO,WAAOA,GAAP,mBAAA6B,EAAA,+EAEoBhD,EAAe,UAFnC,cAEOiD,EAFP,gBAGoBA,EAAKC,OAHzB,OAGOrD,EAHP,OAIOjC,EAASwC,EAAeP,EAAK4I,SAEnCtH,EAAUL,EAAalD,IANxB,kDAQC4J,QAAQC,IAAR,MARD,0DAAP,yDWzCG,CAACtG,IAmCJ,OACI,uBAAKwB,UAAU,kBAAf,UACI,eAAC,GAAD,IAEA,eAAC,KAAD,CACIyF,UAAYA,GACZxK,OAASA,EACT8K,cAAc,QACdC,YAAY,MACZ3E,SAAWA,GACX4E,gBA1Ba,SAAElI,EAAOF,EAAOH,EAAKwI,GAU1C,MAAO,CACH7B,MATU,CACV8B,gBAAmBvF,IAAQ7C,EAAMO,KAAK2G,IAAQ,UAAY,UAC1DmB,aAAc,MACdC,QAAS,GACTC,QAAS,QACTC,MAAO,WAoBHC,mBA5CU,SAAC3K,GACnB2C,EAAU6D,OA4CFoE,cAzCU,SAAC5K,GACnB2C,EXdoC,CACxC/C,KAAMX,EACNa,QWY8BE,KAyClB6K,OAtCS,SAAC7K,GAClBgK,EAAahK,GACb0B,aAAakD,QAAS,WAAY5E,IAqC1B8K,KAAOf,EACPgB,aAnCS,SAAC/K,GAClB2C,EAAUR,MAmCF6I,YAAa,EACbC,WAAY,CACR/I,MAAOoE,MAGf,eAAC,GAAD,IAEKjH,GAAgB,eAAC,GAAD,IAGrB,eAAC,GAAD,Q,4BChGC6L,GAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,gDAEF,OACG,eAAC,IAAD,2BAAYA,GAAZ,IACKD,UAAY,SAAEE,GAAF,OACNJ,EACI,eAACC,EAAD,eAAgBG,IAChB,eAAC,IAAD,CAAUC,GAAG,gBAMnCN,GAAaO,UAAY,CACrBN,gBAAiBO,KAAUC,KAAKC,WAChCP,UAAWK,KAAUG,KAAKD,YCnBvB,IAAME,GAAc,SAAC,GAIrB,IAHHX,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,gDAEF,OACG,eAAC,IAAD,2BAAYA,GAAZ,IACKD,UAAY,SAAEE,GAAF,OACNJ,EACI,eAAC,IAAD,CAAUK,GAAG,MACb,eAACJ,EAAD,eAAgBG,SAMtCO,GAAYL,UAAY,CACpBN,gBAAiBO,KAAUC,KAAKC,WAChCP,UAAWK,KAAUG,KAAKD,YCdvB,IAAMG,GAAY,WAErB,IAAMpJ,EAAWa,cAFU,EAGD8B,aAAa,SAAA5F,GAAK,OAAIA,EAAMS,QAA9ChB,EAHmB,EAGnBA,SAAU4F,EAHS,EAGTA,IAMlB,OAJAqD,qBAAU,WACNzF,Eb8BJ,uCAAO,WAAOA,GAAP,iBAAA6B,EAAA,sEACgBhD,EAAe,cAD/B,cACGiD,EADH,gBAEgBA,EAAKC,OAFrB,QAEGrD,EAFH,QAIOsD,IACNjD,aAAakD,QAAS,QAASvD,EAAKI,OACpCC,aAAakD,QAAS,mBAAmB,IAAIC,MAAOC,WAEpDnC,EAAUH,EAAM,CACZuC,IAAK1D,EAAK0D,IACV1B,KAAMhC,EAAKgC,SAIfV,EAAUJ,KAdX,2CAAP,yDa7BG,CAACI,IAECxD,EACO,4CAIR,eAAC,IAAD,UACI,+BACI,gBAAC,IAAD,WACI,eAAC,GAAD,CACI6M,OAAK,EACLC,KAAK,SACLZ,UAAY9H,GACZ4H,kBAAoBpG,IAExB,eAAC,GAAD,CACIiH,OAAK,EACLC,KAAK,IACLZ,UAAYvB,GACZqB,kBAAoBpG,IAGxB,eAAC,IAAD,CAAUyG,GAAG,cClCpBU,GAAc,WACvB,OACI,eAAC,IAAD,CAAU1L,MAAQA,EAAlB,SACI,eAAC,GAAD,O,OCJZ2L,IAASC,OACL,eAAC,GAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.8f2a859a.chunk.js","sourcesContent":["\n\nexport const types = {\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    eventSetActive: '[event] Set Active',\n    eventLogout: '[event] Logout',\n    eventStartAddNew: '[event] Start add new',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Event loaded',\n\n    authChekingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start register',\n    authStartTokenRenew: '[auth] Start token renewal',\n    authLogout: '[auth] Logout',\n};","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    checking: true,\n    //uid: null,\n    //name: null\n};\n\nexport const authReducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n        case types.authChekingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n        case types.authLogout:\n            return {\n                checking: false\n            }\n        default:\n            return state;\n    }\n};","import { types } from '../types/types';\n\n// {\n//     id: \"\",\n//     title: 'cumpleanos del jefe',\n//     start: moment().toDate(),\n//     end: moment().add( 2, 'hours' ).toDate(),\n//     notes: 'comprar el queque',\n//     user: {\n//         _id: '123',\n//         name: 'Ricardo'\n//     }\n// }\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\nexport const calendarReducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n        case types.eventLoaded:\n            return{\n                ...state,\n                events: [ ...action.payload ]\n            }\n        case types.eventLogout:\n            return {\n                ...initialState\n            }\n        default:\n            return state;\n    }\n};","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n};\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\nimport { authReducer } from './authReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { uiReducer } from './uiReducer';\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n});","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);","const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n\n    if ( method === 'GET' ) {\n        return fetch( url );\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n};\n\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem( 'token' ) || '';\n\n    if ( method === 'GET' ) {\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-Type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n};\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","import moment from 'moment';\n\nexport const prepareEvents = ( events = [] ) => {\n    \n    return events.map(\n        (e) => ({\n            ...e,\n            end: moment( e.end ).toDate(),\n            start: moment( e.start ).toDate(),\n        })\n    );\n};","import Swal from 'sweetalert2';\nimport { fetchConToken } from '../helpers/fetch';\nimport { prepareEvents } from '../helpers/prepareEvents';\nimport { types } from '../types/types';\n\nexport const eventStartAddNew = ( event ) => {\n    return async( dispatch, getState ) => {\n        const { uid, name } = getState();\n\n        try {\n            const resp = await fetchConToken( 'events', event, 'POST' );\n            const body = await resp.json();\n            \n            if ( body.ok ) {\n                event.id = body.evento.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                };\n            }\n\n            dispatch( eventAddNew( event ) );\n        } catch (error) {\n            console.log(error)\n        }\n    }\n};\n\nconst eventAddNew = ( event ) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = ( event ) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\nexport const eventStartDelete = () => {\n    return async( dispatch, getState ) => {\n        const { id } = getState().calendar.activeEvent;\n        try {\n            const resp = await fetchConToken( `events/${ id }`, {}, 'DELETE' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventDeleted() );\n            } else {\n                Swal.fire( 'Error', body.msg, 'error' );\n            }\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n};\nconst eventDeleted = () => ({ type: types.eventDeleted });\nexport const eventStartUpdate = ( event ) => {\n    return async( dispatch ) => {\n        try {\n            const resp = await fetchConToken( `events/${ event.id }`, event, 'PUT' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventUpdated( event ) );\n            } else {\n                Swal.fire( 'Error', body.msg, 'error' );\n            }\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n};\n\nconst eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\nexport const eventStartLoading = () => {\n    return async( dispatch ) => {\n        try {\n            const resp = await fetchConToken( 'events' );\n            const body = await resp.json();\n            const events = prepareEvents( body.eventos );\n            \n            dispatch( eventLoaded( events ) );\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\nconst eventLoaded = ( events ) => ({\n    type: types.eventLoaded,\n    payload: events\n});\n\nexport const eventLogout = () => ({ type: types.eventLogout });","import Swal from 'sweetalert2';\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport { eventLogout } from './events';\n\n\nexport const startLogin = ( email, password ) => {\n    return async( dispatch ) => {\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST', );\n        const body = await resp.json();\n\n        if ( body.ok ) {\n            localStorage.setItem( 'token', body.token );\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }));\n        } else {\n            Swal.fire( 'Error', body.msg, 'error' );\n        }\n    }\n};\n\nexport const startRegister = ( email, password, name ) => {\n    return async( dispatch ) => {\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST', );\n        const body = await resp.json();\n\n        if ( body.ok ) {\n            localStorage.setItem( 'token', body.token );\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }));\n            Swal.fire( 'Success', 'Usuario creado', 'success' );\n        } else {\n            Swal.fire( 'Error', body.msg, 'error' );\n        }\n    }\n};\n\nexport const startChecking = () => {\n    return async( dispatch ) => {\n        const resp = await fetchConToken( 'auth/renew' );\n        const body = await resp.json();\n\n        if ( body.ok ) {\n            localStorage.setItem( 'token', body.token );\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }));\n           \n        } else {\n            dispatch( checkingFinish() );\n        }\n    }\n};\n\nconst checkingFinish = () => ({ type: types.authChekingFinish });\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n});\n\nexport const startLogout = () => {\n    return ( dispatch ) => {\n        localStorage.clear();\n        dispatch( eventLogout() );\n        dispatch( logout() );\n    }\n};\n\nconst logout = () => ({ type: types.authLogout });","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        lEmail: 'ric@gmail.com',\n        lPassword: '123456'\n    });\n\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n        rName: 'Ricar',\n        rEmail: 'ricar@gmail.com',\n        rPassword1: '123456',\n        rPassword2: '123456'\n    });\n\n    const { lEmail, lPassword } = formLoginValues;\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n    const handleLogin = ( e ) => {\n        e.preventDefault();\n        dispatch( startLogin( lEmail, lPassword ) );\n    };\n\n    const handleRegister = ( e ) => {\n        e.preventDefault();\n\n        if ( rPassword1 !== rPassword2 ) {\n            return Swal.fire( 'Error', 'Las contrasenas debe ser iguales', 'error' );\n        }\n        dispatch( startRegister( rEmail, rPassword1, rName ) );\n    };\n    \n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={ handleLogin }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={ lEmail }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={ lPassword }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={ handleRegister }>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={ rName }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={ rEmail }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                name=\"rPassword1\"\n                                value={ rPassword1 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name=\"rPassword2\"\n                                value={ rPassword2 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n\n    const { name } = useSelector( state => state.auth );\n    const dispatch = useDispatch();\n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    };\n\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                { name }\n            </span>\n\n            <button\n                className=\"btn btn-outline-danger\"\n                onClick={ handleLogout }\n            >\n            <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react';\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong>{ title }</strong>\n            <span>- { user.name }</span>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });\nexport const eventSetActive = () => ({ type: types.eventSetActive });","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\nimport { useEffect } from 'react';\n\nconst customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n};\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add( 1, 'hours' );\nconst nowPlus1 = now.clone().add( 1, 'hours' );\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n};\n\nexport const CalendarModal = () => {\n\n    const dispatch = useDispatch();\n    const { modalOpen } = useSelector( state => state.ui );\n    const { activeEvent } = useSelector( state => state.calendar );\n    const [ dateStart, setDetaStart ] = useState( now.toDate() );\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\n    const [ titleValid, setTitleValid ] = useState( true );\n    const [ formValues, setFormValues ] = useState( initEvent );\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect( () => {\n       if ( activeEvent ) {\n           setFormValues( activeEvent );\n       } else {\n        setFormValues( initEvent );\n       }\n    }, [ activeEvent, setFormValues ]);\n    \n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    };\n\n    const closeModal = () => {\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        setFormValues( initEvent );\n    };\n\n    const handleStartDateChange = (e) => {\n        setDetaStart( e );\n        setFormValues({\n            ...formValues,\n            start: e\n        });\n    };\n\n    const handleEndDateChange = (e) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,\n            end: e\n        });\n    };\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        \n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            Swal.fire( 'Error', 'La fecha final debe de ser mayor a la fecha inicial', 'error' );\n            return;\n        }\n\n        if ( title.trim().length < 2 ) {\n            return setTitleValid( false );\n        }\n\n        if ( activeEvent ) {\n            dispatch( eventStartUpdate( formValues ) );\n        } else {\n           dispatch( eventStartAddNew( formValues ) ); \n        }\n\n        setTitleValid( true );\n        closeModal();\n    };\n\n    return (\n        <Modal\n            isOpen={ modalOpen }\n            // onAfterOpen={afterOpenModal}\n            onRequestClose={ closeModal }\n            style={ customStyles }\n            closeTimeoutMS={ 200 }\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n        >\n            <h1>{ (activeEvent) ? 'Editar evento' : 'Nuevo evento' }</h1>\n            <hr />\n            <form\n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={ `form-control ${ !titleValid && 'is-invalid' }` }\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    );\n    \n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    };\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>      \n    )\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    };\n\n    \n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento</span>\n        </button>\n    )\n};\n","import React, { useEffect, useState } from 'react';\nimport { Navbar } from '../ui/Navbar';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale( 'es' );\n\nconst localizer = momentLocalizer( moment );\n// const events = [{\n//     title: 'cumpleanos del jefe',\n//     start: moment().toDate(),\n//     end: moment().add( 2, 'hours' ).toDate(),\n//     bgcolor: '#fafafa',\n//     notes: 'comprar el queque',\n//     user: {\n//         _id: '123',\n//         name: 'Ricardo'\n//     }\n// }];\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector( state => state.calendar );\n    const { uid } = useSelector( state => state.auth );\n    const [lastView, setLastView] = useState( localStorage.getItem( 'lastView' ) || 'month' );\n\n    useEffect(() => {\n        dispatch( eventStartLoading() );\n    }, [dispatch]);\n\n    const onDoubleClick = (e) => {\n        dispatch( uiOpenModal() );\n    };\n\n    const onSelectEvent = (e) => {\n        dispatch( eventSetActive( e ) );\n    };\n\n    const onViewChange = (e) => {\n        setLastView( e );\n        localStorage.setItem( 'lastView', e );\n    };\n\n    const onSelectSlot = (e) => {\n        dispatch( eventClearActiveEvent() );\n    };\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n\n        const style = {\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n       \n        return {\n            style\n        }\n\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onView={ onViewChange }\n                view={ lastView }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n            <AddNewFab />\n            {\n                (activeEvent) && <DeleteEventFab />\n            }\n            \n            <CalendarModal />\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Redirect, Route } from 'react-router';\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n       <Route { ...rest }\n            component={ ( props ) => (\n                ( isAuthenticated )\n                    ? <Component { ...props } />\n                    : <Redirect to=\"/login\" />\n            )}\n       />\n    )\n}\n\nPrivateRoute.prototype = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Redirect, Route } from 'react-router';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n       <Route { ...rest }\n            component={ ( props ) => (\n                ( isAuthenticated )\n                    ? <Redirect to=\"/\" />\n                    : <Component { ...props } />\n            )}\n       />\n    )\n}\n\nPublicRoute.prototype = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Redirect, Switch } from 'react-router-dom';\nimport { startChecking } from '../actions/auth';\nimport { LoginScreen } from '../components/auth/Login';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector( state => state.auth );\n\n    useEffect(() => {\n        dispatch( startChecking() );\n    }, [dispatch]);\n\n    if ( checking ) {\n        return (<h5>Expere...</h5>);\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        exact\n                        path=\"/login\"\n                        component={ LoginScreen }\n                        isAuthenticated={ !!uid }\n                    />\n                    <PrivateRoute\n                        exact\n                        path=\"/\"\n                        component={ CalendarScreen }\n                        isAuthenticated={ !!uid }\n                     />\n\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n            \n    \n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter';\n\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}